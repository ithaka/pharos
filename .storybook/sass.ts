const sass_values = {
  mixins: [
    {
      name: 'input-base',
      parameters: [
        'padding: var(--pharos-spacing-one-half-x) var(--pharos-spacing-three-quarters-x)',
        'width: 100%',
        'display: block',
        'box-sizing: border-box',
        'border: 1px solid var(--pharos-form-element-color-border-base)',
        'border-radius: var(--pharos-radius-base-standard)',
        'transition: transform var(--pharos-transition-base) 0s',
        'color: var(--pharos-form-element-color-text-base)',
      ],
      usage: 'Base styling for various form elements',
      category: 'Form elements',
    },
    {
      name: 'input-placeholder',
      parameters: ['color: var(--pharos-form-element-color-text-placeholder)', 'opacity: 1'],
      usage: 'Placeholder styling for input',
      category: 'Form elements',
    },
    {
      name: 'input-focus',
      parameters: [
        'outline: none',
        'border: 2px solid var(--pharos-form-element-color-border-focus)',
        'transition: transform var(--pharos-transition-base) 0s',
      ],
      usage: 'Styling for input on focus',
      category: 'Form elements',
    },
    {
      name: 'input-wrapper',
      parameters: ['position: relative', 'display: flex', 'align-items: center', 'width: 100%'],
      usage: 'Wrapper styling for input',
      category: 'Form elements',
    },
    {
      name: 'input-invalid',
      parameters: ['border: 2px solid', 'var(--pharos-form-element-color-border-invalid)'],
      usage: "Styling for input's invalid state",
      category: 'Form elements',
    },
    {
      name: 'input-disabled',
      parameters: [
        'color: var(--pharos-form-element-color-text-disabled)',
        'background-color: var(--pharos-form-element-color-background-disabled)',
        'border-color: var(--pharos-form-element-color-background-disabled)',
        'pointer-events: none',
      ],
      usage: "Styling for input's disabled state",
      category: 'Form elements',
    },
    {
      name: 'input-required',
      parameters: ['box-shadow: none'],
      category: 'Form elements',
    },
    {
      name: 'input-padding-thick-border',
      parameters: [
        'padding: calc(var(--pharos-spacing-one-half-x) - 1px)',
        'calc(var(--pharos-spacing-three-quarters-x) - 1px)',
      ],
      usage: "Styling for input's required state",
      category: 'Form elements',
    },
    {
      name: 'input-on-background',
      parameters: [
        'background-color: var(--pharos-color-marble-gray-20)',
        'border-color: var(--pharos-color-marble-gray-20)',
        'color: var(--pharos-color-text-white)',
        'caret-color: var(--pharos-color-text-white)',

        '&::placeholder {',
        'color: var(--pharos-color-marble-gray-base)',
      ],
      usage: 'Styling for input on a background',
      category: 'Form elements',
    },
    {
      name: 'option-input',
      parameters: ['display: block', 'box-sizing: border-box'],
      usage: 'Styling for input options',
      category: 'Form elements',
    },
    {
      name: 'option-wrapper',
      parameters: ['display: inline-flex', 'align-items: flex-start', 'position: relative'],
      usage: 'Wrapper styling for input options',
      category: 'Form elements',
    },
    {
      name: 'hidden',
      parameters: [
        'border: 0',
        'clip: rect(0 0 0 0)',
        'clip-path: inset(50%)',
        'height: 1px',
        'width: 1px',
        'margin: -1px',
        'overflow: hidden',
        'padding: 0',
        'position: absolute',
        'white-space: nowrap',
      ],
      usage: 'Styling to hide an element',
      category: 'Typography',
    },
    {
      name: 'font-base',
      parameters: [
        '$font-family: var(--pharos-font-family-sans-serif),',
        '$font-size: var(--pharos-font-size-base),',
        '$font-weight: var(--pharos-font-weight-regular),',
        '$line-height: var(--pharos-line-height-medium)',
        'font-family: $font-family',
        'font-size: $font-size',
        'font-weight: $font-weight',
        'line-height: $line-height',
        'text-rendering: optimizeLegibility',
        '-webkit-font-smoothing: antialiased',
        '-moz-osx-font-smoothing: grayscale',
      ],
      usage: 'Styling for base font size ',
      category: 'Typography',
    },
    {
      name: 'letter-spacing-serif',
      parameters: ['$font-size: 1rem', 'letter-spacing: calc(#{$font-size} * -0.01)'],
      usage: 'Letter spacing for serif type',
      category: 'Typography',
    },
    {
      name: 'letter-spacing-sans-serif',
      parameters: ['$font-size: 1rem', 'letter-spacing: calc(#{$font-size} * -0.02)'],
      usage: 'Letter spacing for sans-serif type',
      category: 'Typography',
    },
    {
      name: 'label-base',
      parameters: [
        '$margin-bottom: var--pharos-spacing-one-quarter-x',
        '$text-transform: uppercase',
        'color: var(--pharos-form-element-color-text-base)',
        'margin-bottom: $margin-bottom',
        'display: block',
        'padding: 0',
        'text-transform: $text-transform',
      ],
      usage: 'Styling for labels',
      category: 'Form elements',
    },
    {
      name: 'form-element-label',
      parameters: [
        '$font-size: var(--pharos-form-element-size-text-label),',
        '$font-weight: var(--pharos-font-weight-bold),',
        '$line-height: var(--pharos-line-height-small)',
      ],
      usage: 'Styling for labels in forms',
      category: 'Form elements',
    },
    {
      name: 'groupable-element-label',
      parameters: [
        '@include label-base($margin-bottom: 0,',
        '$text-transform: none',

        'padding-left: var(--pharos-spacing-one-quarter-x)',
      ],
      usage: 'Styling for labels of grouped form elements',
      category: 'Form elements',
    },
    {
      name: 'icon-button',
      parameters: [
        'display: flex',
        'flex-direction: column',
        'align-items: center',
        'justify-content: center',
        'cursor: pointer',
        'box-sizing: border-box',
        'background: none',
        'margin: 0',
      ],
      usage: 'Styling for icon-only buttons',
      category: 'Buttons',
    },
    {
      name: 'interactive-focus',
      parameters: ['outline: 2px solid var(--pharos-color-focus)', 'outline-offset: 2px'],
      usage: 'Focus styling for most interactive components',
      category: 'Interaction',
    },
    {
      name: 'button-base',
      parameters: [
        '$color: var(--pharos-color-text-white),',
        '$background-color: var(--pharos-color-interactive-primary),',
        '$border-color: var(--pharos-color-interactive-primary)',
        '@include font-base($font-weight: var(--pharos-font-weight-bold))',
        '@include transition-base(border-color, background, color)',

        'color: $color',
        'background-color: $background-color',
        'border: 1px solid $border-color',
        'padding: var(--pharos-spacing-one-quarter-x)',
        'var(--pharos-spacing-three-quarters-x)',
        'border-radius: var(--pharos-radius-base-standard)',
        'cursor: pointer',
        'display: flex',
        'align-items: center',
        'justify-content: center',
        'margin: 0',
        'appearance: none',
      ],
      usage: 'Base styling for button component',
      category: 'Buttons',
    },
    {
      name: 'button-hover',
      parameters: [
        '$color: var(--pharos-color-hover-primary),',
        '$background-color: transparent,',
        '$border-color: var(--pharos-color-hover-primary)',
        '&:hover:not([disabled]),',
        '&:active:not([disabled]) {',
        'color: $color',
        'background-color: $background-color',
        'border: 2px solid $border-color',
        'padding: calc(var(--pharos-spacing-one-quarter-x) - 1px)',
        'calc(var(--pharos-spacing-three-quarters-x) - 1px)',
      ],
      usage: 'Hover styling for button component',
      category: 'Buttons',
    },
    {
      name: 'button-large',
      parameters: [
        'padding: var(--pharos-spacing-one-half-x)',
        'var(--pharos-spacing-three-quarters-x)',

        '&:hover:not([disabled]),',
        '&:active:not([disabled])',
        'padding: calc(var(--pharos-spacing-one-half-x) - 1px)',
        'calc(var(--pharos-spacing-three-quarters-x) - 1px)',
      ],
      usage: 'Styling for large button variant',
      category: 'Buttons',
    },
    {
      name: 'button-color',
      parameters: [
        '$color: var(--pharos-color-text-white),',
        '$background-color: var(--pharos-color-interactive-primary),',
        '$border-color: var(--pharos-color-interactive-primary)',
        'color: $color',
        'background-color: $background-color',
        'border-color: $border-color',
      ],
      usage: 'Color for primary button component',
      category: 'Buttons',
    },
    {
      name: 'link-base',
      parameters: [
        '@include underline',

        'color: var(--pharos-color-interactive-secondary)',
        'transition-property: color, text-decoration-color',
        'transition-duration: 200ms',
        'transition-timing-function: ease-in-out',
      ],
      usage: 'Base styling for link',
      category: 'Links',
    },
    {
      name: 'link-hover',
      parameters: [, '@include no-underline', 'color: var(--pharos-color-hover-primary)'],
      usage: 'Hover style for links',
      category: 'Links',
    },
    {
      name: 'underline',
      parameters: [
        '$text-decoration-color: var--pharos-color-interactive-secondary',
        'text-decoration: underline',
        'text-decoration-color: $text-decoration-color',
      ],
      usage: 'Base style for underlining text',
      category: 'Typography',
    },
    {
      name: 'no-underline',
      parameters: [
        'text-decoration: none',
        'text-decoration-color: transparent',
        'text-decoration-line: underline',
        'text-decoration-style: solid',
      ],
      usage: 'Style for text that is should not be underlined',
      category: 'Typography',
    },
    {
      name: 'no-bullet',
      usage: 'Style for not displaying bullets for unordered lists',
      parameters: ['list-style-type: none'],
      category: 'Typography',
    },
    {
      name: 'list-inline',
      parameters: [
        '$margin-right: var--pharos-spacing-one-and-a-half-x',
        'display: flex',
        'flex-wrap: wrap',
        'align-items: center',
        'margin-right: $margin-right',
        'margin-bottom: 0',
      ],
      usage: 'Base style for inline lists',
      category: 'Typography',
    },
    {
      name: 'list-nested',
      parameters: ['margin-bottom: var(--pharos-spacing-three-quarters-x)'],
      usage: 'Base style for nested lists',
      category: 'Typography',
    },
    {
      name: 'transition-base',
      parameters: [
        'transition-property: $properties',
        'transition-duration: var(--pharos-transition-duration-default)',
        'transition-timing-function: ease-in-out',
      ],
      usage: 'Base style for transitions',
      category: 'Interaction',
    },
    {
      name: 'content-label',
      parameters: ['@include form-element-label($args...)'],
      usage: 'Base style for content labels',
      category: 'Layout',
    },
    {
      name: 'at-least',
      parameters: ['$width: map-get(variables.$breakpoints, $breakpoint, width)'],
      category: 'Typography',
    },
    {
      name: 'until',
      parameters: [
        '@if map-has-key(variables.$breakpoints, $breakpoint) {',
        '$width: map-get(variables.$breakpoints, $breakpoint, width)',
      ],
      category: 'Layout',
      usage: 'Styles viewports that are at most the size of the passed breakpoint',
    },
    {
      name: 'between',
      parameters: [
        '$lower-width: functions.calculate-px(map-get(variables.$breakpoints, $lower, width))',
        '$upper-width: functions.calculate-px(map-get(variables.$breakpoints, $upper, width))',
      ],
      category: 'Layout',
      usage: 'Styles viewports that are between the sizes of the passed breakpoints',
    },
    {
      name: 'layout-base',
      parameters: ['display: grid', "grid-template-areas: '. content .'"],
      usage: 'Base style for layout component',
      category: 'Layout',
    },
    {
      name: 'layout-content',
      parameters: [
        'display: grid',
        'grid-area: content',
        'grid-template-columns: repeat(map-get(variables.$breakpoints,large, columns), 1fr)',
        'grid-template-rows: auto',
        'column-gap: var(--pharos-spacing-gutter)',
        'padding: 0',
        'margin: 0',
        'list-style: none',
      ],
      usage: 'Base style for layout content',
      category: 'Layout',
    },
    {
      name: 'layout-base-columns',
      parameters: [
        '$breakpoints: map-get(variables.$layouts, $layout)',
        "$fixed-margin: $layout != '1-col'",
      ],
      usage: "Base style for layout's inner grid",
      category: 'Layout',
    },
    {
      name: 'layout-content-width',
      parameters: [
        '$breakpoints: map-get(variables.$layouts, $layout)',
        "$fixed-width: $layout == '1-col'",
      ],
      usage: "Base style for layout's inner grid",
      category: 'Layout',
    },
    {
      name: 'truncate-text',
      parameters: [
        'overflow: hidden',
        '-webkit-line-clamp: $lines',
        '-webkit-box-orient: vertical',
        'display: -webkit-box',
        'white-space: normal',
      ],
      usage: 'Style for truncated text',
      category: 'Typography',
    },
  ],
};
export default sass_values;
