@use '../../utils/scss/mixins';

:host {
  display: inline-flex;
  contain: layout;
}

:host #button-element {
  @include mixins.button-hover;
  @include mixins.interactive-focus;
}

:host([variant='primary']) #button-element {
  @include mixins.button-base;
}

:host([variant='secondary']) #button-element {
  @include mixins.button-base(
    $color: var(--pharos-button-color-base-secondary-text-base),
    $background-color: var(--pharos-button-color-base-secondary-background-base),
    $border-color: var(--pharos-button-color-base-secondary-border-base)
  );
}

:host([variant='subtle']) #button-element {
  @include mixins.button-base(
    $color: var(--pharos-button-color-base-subtle-text-base),
    $background-color: var(--pharos-button-color-base-subtle-background-base),
    $border-color: var(--pharos-button-color-base-subtle-border-base)
  );
}

:host([variant='overlay']) #button-element {
  @include mixins.button-base(
    $color: var(--pharos-button-color-base-overlay-text-base),
    $background-color: var(--pharos-button-color-base-overlay-background-base),
    $border-color: var(--pharos-button-color-base-overlay-border-base)
  );

  opacity: 0.9;
}

:host([href]) #button-element {
  @include mixins.no-underline;
}

:host([large]) #button-element {
  @include mixins.button-large;
}

:host([icon]) #button-element {
  padding: var(--pharos-button-padding-base);
}

:host([disabled]) {
  pointer-events: none;
}

:host([disabled]) #button-element {
  @include mixins.button-color(
    $color: var(--pharos-button-color-base-primary-text-disabled),
    $background-color: var(--pharos-button-color-base-primary-background-disabled),
    $border-color: var(--pharos-button-color-base-primary-border-disabled)
  );
}

:host([full-width]) {
  width: 100%;

  #button-element {
    justify-content: start;
    flex: auto;
  }
}

:host([icon-condensed][icon]) #button-element {
  padding: var(--pharos-button-padding-condensed);
  border: 0;
}

:host([icon][large]) #button-element {
  padding: var(--pharos-button-padding-large);
}

:host([variant='subtle'][disabled]) #button-element {
  @include mixins.button-color(
    $color: var(--pharos-button-color-base-subtle-text-disabled),
    $background-color: var(--pharos-button-color-base-subtle-background-disabled),
    $border-color: var(--pharos-button-color-base-subtle-border-disabled)
  );
}

:host([on-background][disabled]) #button-element {
  @include mixins.button-color(
    $color: var(--pharos-button-color-on-background-primary-text-disabled),
    $background-color: var(--pharos-button-color-on-background-primary-background-disabled),
    $border-color: var(--pharos-button-color-on-background-primary-border-disabled)
  );
}

:host([on-background][variant='subtle'][disabled]) #button-element {
  @include mixins.button-color(
    $color: var(--pharos-button-color-on-background-primary-text-disabled),
    $background-color: var(--pharos-button-color-base-subtle-background-disabled),
    $border-color: var(--pharos-button-color-base-subtle-border-base)
  );
}

:host([on-background][variant='secondary']:not([disabled])) #button-element {
  @include mixins.button-color(
    $color: var(--pharos-button-color-on-background-secondary-text-base),
    $background-color: var(--pharos-button-color-on-background-secondary-background-base),
    $border-color: var(--pharos-button-color-on-background-secondary-border-base)
  );
}

:host([on-background][variant='subtle']:not([disabled])) #button-element {
  @include mixins.button-color(
    $color: var(--pharos-button-color-on-background-subtle-text-base),
    $background-color: var(--pharos-button-color-on-background-subtle-background-base),
    $border-color: var(--pharos-button-color-on-background-subtle-border-base)
  );
}

:host([icon]:not([disabled])) #button-element:hover,
:host([icon]:not([disabled])) #button-element:active {
  padding: calc(var(--pharos-button-padding-base) - 1px);
}

:host([variant='subtle']:not([disabled])) #button-element:hover,
:host([variant='subtle']:not([disabled])) #button-element:active {
  @include mixins.button-color(
    $color: var(--pharos-button-color-base-subtle-text-hover),
    $background-color: var(--pharos-button-color-base-subtle-background-hover),
    $border-color: var(--pharos-button-color-base-subtle-border-hover)
  );
}

:host([variant='overlay']:not([disabled])) #button-element:hover,
:host([variant='overlay']:not([disabled])) #button-element:active {
  @include mixins.button-color(
    $color: var(--pharos-button-color-base-overlay-text-hover),
    $background-color: var(--pharos-button-color-base-overlay-background-hover),
    $border-color: var(--pharos-button-color-base-overlay-border-hover)
  );
}

:host([icon-condensed][icon]:not([disabled])) #button-element:hover,
:host([icon-condensed][icon]:not([disabled])) #button-element:active {
  padding: var(--pharos-button-padding-condensed);
}

:host([on-background][variant='primary']:not([disabled])) #button-element:hover,
:host([on-background][variant='primary']:not([disabled])) #button-element:active,
:host([on-background][variant='secondary']:not([disabled])) #button-element:hover,
:host([on-background][variant='secondary']:not([disabled])) #button-element:active {
  @include mixins.button-color(
    $color: var(--pharos-button-color-on-background-primary-text-hover),
    $background-color: var(--pharos-button-color-on-background-primary-background-hover),
    $border-color: var(--pharos-button-color-on-background-primary-border-hover)
  );
}

:host([on-background][variant='subtle']:not([disabled])) #button-element:hover,
:host([on-background][variant='subtle']:not([disabled])) #button-element:active {
  @include mixins.button-color(
    $color: var(--pharos-button-color-on-background-subtle-text-hover),
    $background-color: var(--pharos-button-color-on-background-subtle-background-hover),
    $border-color: var(--pharos-button-color-on-background-subtle-border-hover)
  );
}

:host([icon][large]:not([disabled])) #button-element:hover,
:host([icon][large]:not([disabled])) #button-element:active {
  padding: calc(var(--pharos-button-padding-large) - 1px);
}
